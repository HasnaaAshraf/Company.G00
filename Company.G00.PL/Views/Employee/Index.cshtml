@model IEnumerable<Employee>

@{
    ViewData["Title"] = "Index";
    // ViewData["Message"];
    string? ViewDataMess = ViewData["Message"] as string; // Must Make Casting 
    string? ViewBagMess = ViewBag.Message; // Didn't Need Casting For This It's More Usable And Flexability
}

@* <div class="mt-5 alert alert-primary"> *@
@*     <p>@ViewData["Message"]</p> *@
@* </div> *@

@* <div class="mt-5 alert alert-primary"> *@
@*     <p>@ViewBag.Message</p> *@
@* </div> *@

@if(!string.IsNullOrEmpty(TempData["Message"] as string) )
{
    <div class="mt-5 alert alert-success">
    <p>@TempData["Message"]</p>
    </div>
}


<br/>
<h1>All Employees</h1>

<br/>

<form >
<div class="container">
 <div class="row">
            <div class="col-6">
                <input id="SearchInput" placeholder="Search By Name" name="SearchInput" class="form-control" />
            </div>
            <div class="col-6">
                <input type="submit" value="Search" class=" btn btn-primary"
            </div>
 </div> 
</div>
</form>

<a asp-action="Create" asp-controller="Employee" class="mb-3 mt-4 btn btn-primary">Create Employee</a>

<br />

 @if (Model.Count() > 0)
 {
     <div class="table-responsive">
        <table class="table table-striped table-hover ">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Age</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Phone</th>
                    <th>Salary</th>
                    <th>IsActive</th>
                    <th>IsDelete</th>
                    <th>@Html.DisplayNameFor(E => E.HiringDate)</th>
                    <th>@Html.DisplayNameFor(E => E.CreateAt)</th>
                    <th>Department</th>
                    <th>Details</th>
                    <th>Update</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <img src="~/Files/images/@item.ImageName" class="img-fluid rounded rounded-circle" />
                        </td>
                        <td>@item.Name</td>
                        <td>@item.Age</td>
                        <td>@item.Email</td>
                        <td>@item.Address</td>
                        <td>@item.Phone</td>
                        <td>@item.Salary</td>
                        <td>@item.IsActive</td>
                        <td>@item.IsDeleted</td>
                        <td>@item.HiringDate</td>
                        <td>@item.CreateAt</td>
                        <td>@(item.Department?.Name ?? "No Department")</td>
                        <td>
                            <a asp-controller="Employee" asp-action="Details" asp-route-id="@item.Id" class="btn btn-warning">Details</a>
                        </td>
                        <td>
                            <a asp-controller="Employee" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success">Update</a>
                        </td>
                        <td>
                            <a asp-controller="Employee" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
     </div>
              
 }
else
{
    <div class="mt-4 alert alert-success text-center">
        <h4>There Are No Employees</h4>
    </div>
}

</div>
</div>
</div>


<script>
    $(document).ready(function () {
        const searchBar = $('#SearchInput');
        const table = $('table');

        searchBar.on('keyup', function (event) {
            var searchValue = searchBar.val();

            $.ajax({
                url: '/Employee/RealSearch',
                type: 'Get',
                data: { SearchInput: searchValue },
                success: function (result) {
                    table.html(result);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        });
    });
</script>